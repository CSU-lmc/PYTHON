'''
内容简介

大家好，我是cxk
学号:8202181024
班级:化生环1810.5班
我喜欢唱 跳 rap 篮球

选作：一元方程求解（热力学）
'''

#选择部分
#计算部分
from sympy import *
from sympy.abc import T
import numpy as np
import matplotlib.pyplot as plt
#比作部分——图形界面
class Interface:

#选作部分——求解一元方程并显示图像
class Picture:
    # 公式
    def function(x):
        Cp = 0.99403 * +1.671 * pow(10, -4) * x + \
             9.7215 * pow(10, -8) * pow(x, 2) - 9.5838 * pow(10, -11) * pow(x, 3) + \
             1.9520 * pow(10, -14) * pow(x, 4)
        return Cp

    s = """Cp=0.99403*+1.671*pow(10,-4)*x+9.7215*pow(10,-8)*pow(x,2)-9.5838*pow(10,-11)*pow(x,3)+1.9520*pow(10,-14)*pow(x,4)"""
    print("计算公式为:")
    print(s)
    # 求解Cp=1.1时的温度，结果为元组，四个解但只有第二个为正数
    t = solve(0.99403 * +1.671 * pow(10, -4) * T + \
              9.7215 * pow(10, -8) * pow(T, 2) - 9.5838 * pow(10, -11) * pow(T, 3) + \
              1.9520 * pow(10, -14) * pow(T, 4) - 1.1, T)
    answer = t[1]
    # 显示图像
    x = np.linspace(0, 5000, 5000)
    y = function(x)
    plt.plot(x, y, color="red", linewidth=1)
    plt.vlines(1200, 0, function(1200), color="blue", linewidth=0.5, linestyle="--")
    plt.hlines(function(1200), 0, 1200, color="blue", linewidth=0.5, linestyle="--")
    plt.axis()
    plt.grid(True)
    plt.title('Cp-T picture')
    plt.xlabel('T/K')
    plt.ylabel('Cp/(KJ/(Kg K))')
    plt.scatter(1200,function(1200),s=10,color="black")#标记点
    plt.annotate('(%d,%.4f)' % (1200,function(1200)), xy=(1200, function(1200)), xytext=(1000, function(1200)),
                 va='bottom')#标记虚线
    plt.hlines(1.1, 0, answer, color='green', linewidth=0.5, linestyle='--')
    plt.vlines(answer, 0, 1.1, color='green', linewidth=0.5, linestyle='--')
    plt.scatter(answer,1.1,s=10,color="black")#标记点
    plt.annotate('(%.4f,1.1)' % (answer), xy=(answer, 1.1), xytext=(3500, 1.1),
                 va='bottom')#标记虚线
    plt.savefig("PYTHON.png", dpi=72)  # 以分辨率72保存图片，名为 PYTHON
    plt.show()  # 显示图片

#流量
class Q:
    #V-X
    x1 = np.array([0, 1.6, 4.1, 4.8, 6.1, 6.8, 9])
    V = np.array([0, 0.08, 0.61, 0.68, 0.55, 0.42, 0])
    #H-X
    x2 = np.array([0, 1.1, 2.8, 4.6, 6, 8.1, 9])
    H = np.array([0, 0.21, 0.78, 1.87, 1.44, 1.28, 0.2])
    #三次项拟合
    f1 = np.polyfit(x1, V, 3)
    f2 = np.polyfit(x2, H, 3)
    p1 = np.poly1d(f1)
    p2 = np.poly1d(f2)
    #计算流量
    x = symbols('x')
    s = integrate(p1(x) * p2(x), (x, 0, 9))
    s = float(s)
    # 函数图像
    plt.plot(x1, V, color="red")
    plt.plot(x2, H, color="blue")
    plt.xlabel("x")
    plt.ylabel('Q')
    plt.annotate("Q=%.4f" % (z.s), xy=(5, 1), xytext=(5, 1), color="black")
    # 保存
    plt.savefig("Q.png", dpi=72)
    # 显示
    plt.show()

